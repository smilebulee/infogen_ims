version: "3"

services:
  # 최초 설치시 DB(ifg_ims)와 사용자(infogen / infogen) 생성해야 함
  postgres:
    image: postgres:9.6.6
    volumes:
      - /opt/projects/infogen_ims/postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ifg_ims
      - POSTGRES_USER=infogen
      - POSTGRES_PASSWORD=infogen
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
  # front ui
  front:
    build: "./ifg_front"
    ports:
      - "80:8000"
    links:
      - emp_api
      - prj_api
      - postgres
#      - skil_api
#      - cmm_api
#      - cnc_api
      - dili_api
#      - eval_api
#      - kpi_api
#      - stat_api
#      - site_api
    environment:
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=ifg_ims
      - DJANGO_DB_USERNAME=infogen
      - DJANGO_DB_PASSWORD=infogen
#    volumes:
#      - src-front:/app
  # 1.직원관리
  emp_api:
    build: "./api_containers/emp/api"
    ports:
      - "5001:5001"
    links:
      - emp_db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_APPLICATION_NAME=emp_api
      - SIDECAR_PORT=5001
      - MYSQL_HOST=112.220.26.195
      - MYSQL_ROOT_PASSWORD=infogen
      - MYSQL_PORT=3306
      - MYSQL_USER=ims2
      - MYSQL_PASSWORD=1234
      - MYSQL_DATABASE=IFG_IMS
      - TZ=Asia/Seoul
  emp_db:
    build: "./api_containers/emp/db"

  # 2.프로젝트 관리
  prj_api:
    build: "./api_containers/prj/api"
    ports:
      - "5002:5002"
    links:
      - prj_db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_APPLICATION_NAME=prj_api
      - SIDECAR_PORT=5002
      - MYSQL_HOST=112.220.26.195
      - MYSQL_ROOT_PASSWORD=infogen
      - MYSQL_PORT=3306
      - MYSQL_USER=ims2
      - MYSQL_PASSWORD=1234
      - MYSQL_DATABASE=IFG_IMS
      - TZ=Asia/Seoul
  prj_db:
    build: "./api_containers/prj/db"

#  # 3.skill 관리
#  skil_api:
#    build: "./api_containers/skil/api"
#    ports:
#      - "5003:5003"
#    links:
#      - skil_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=skil_api
#      - SIDECAR_PORT=5003
#  skil_db:
#    build: "./api_containers/skil/db"
#
#  # 4.cmm 관리
#  cmm_api:
#    build: "./api_containers/cmm/api"
#    ports:
#      - "5004:5004"
#    links:
#      - cmm_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=cmm_api
#      - SIDECAR_PORT=5004
#  cmm_db:
#    build: "./api_containers/cmm/db"
#
#  # 5.접속 관리
#  cnc_api:
#    build: "./api_containers/cnc/api"
#    ports:
#      - "5005:5005"
#    links:
#      - cnc_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=cnc_api
#      - SIDECAR_PORT=5005
#  cnc_db:
#    build: "./api_containers/cnc/db"
#
#  # 6.근태 관리
  dili_api:
    build: "./api_containers/dili/api"     # Dockerfile의 경로
    ports:
      - "5006:5006"     # 로컬의 5001포트로 요청일 들어오면 dili_api 컨테이너의 5006 포트로 연결
    links:
      - dili_db
      - dili_db2
    environment:
      - SPRING_PROFILES_ACTIVE=prod      # 이미지 생성시 세팅될 환경변수들
      - SPRING_APPLICATION_NAME=dili_api
      - SIDECAR_PORT=5006
      - MYSQL_HOST=112.220.26.195
      - MYSQL_ROOT_PASSWORD=infogen
      - MYSQL_PORT=3306
      - MYSQL_USER=ims2
      - MYSQL_PASSWORD=1234
      - MYSQL_DATABASE=IFG_IMS
      - TZ=Asia/Seoul
  dili_db:
    build: "./api_containers/dili/db"   # Dockerfile의 경로
  dili_db2:
    build: "./api_containers/dili/db"   # Dockerfile의 경로
    #container_name: mariadb
    image: mariadb:latest
    restart: always
    ports:
      - "9877:3306"
    volumes:
      - data-postgressql:/var/lib/mysql
    environment:
      MYSQL_HOST: '112.220.26.195'
      MYSQL_ROOT_PASSWORD: 'infogen'
      MYSQL_USER : 'ims2'
      MYSQL_PASSWORD : '1234'
      MYSQL_DATABASE : 'IFG_IMS'
      TZ: Asia/Seoul
#
#  # 7.평가 관리
#  eval_api:
#    build: "./api_containers/eval/api"
#    ports:
#      - "5007:5007"
#    links:
#      - eval_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=eval_api
#      - SIDECAR_PORT=5007
#  eval_db:
#    build: "./api_containers/eval/db"
#
#  # 8. kpi 관리
#  kpi_api:
#    build: "./api_containers/kpi/api"
#    ports:
#      - "5008:5008"
#    links:
#      - kpi_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=kpi_api
#      - SIDECAR_PORT=5008
#  kpi_db:
#    build: "./api_containers/kpi/db"
#
#  # 9.현황 관리
#  stat_api:
#    build: "./api_containers/stat/api"
#    ports:
#      - "5009:5009"
#    links:
#      - stat_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=stat_api
#      - SIDECAR_PORT=5009
#  stat_db:
#    build: "./api_containers/stat/db"
#
#  # 10.사이트맵 관리
#  site_api:
#    build: "./api_containers/site/api"
#    ports:
#      - "5010:5010"
#    links:
#      - site_db
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_APPLICATION_NAME=site_api
#      - SIDECAR_PORT=5010
#  site_db:
#    build: "./api_containers/site/db"

